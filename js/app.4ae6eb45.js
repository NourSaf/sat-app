(function(){"use strict";var e={870:function(e,t,a){var n=a(5130),i=a(6768),r=a(4232);const o={class:"main"},s={class:"section-img"},l=["src"],c={class:"info-section"},d={class:"title"},h={class:"sub-title"},p={class:"title"},u={class:"sub-title"},m={class:"title"},g={class:"sub-title"},f={class:"center-text"},v={key:0},y={key:1};function _(e,t,a,n,_,w){return(0,i.uX)(),(0,i.CE)("div",o,[(0,i.Lk)("div",s,[(0,i.Lk)("img",{class:"sat-image",src:_.geminiImageUrl,alt:"Image of the current satellite location"},null,8,l),(0,i.Lk)("div",c,[(0,i.Lk)("div",d,[t[0]||(t[0]=(0,i.eW)(" Satellite name ")),(0,i.Lk)("span",h,(0,r.v_)(this.sat_name),1)]),(0,i.Lk)("div",p,[t[1]||(t[1]=(0,i.eW)(" Satellite sensor ")),(0,i.Lk)("span",u,(0,r.v_)(this.type),1)]),(0,i.Lk)("div",m,[t[2]||(t[2]=(0,i.eW)(" Current Location ")),(0,i.Lk)("span",g,(0,r.v_)(_.location_response),1)])]),(0,i.Lk)("div",f,[_.dream_response?((0,i.uX)(),(0,i.CE)("p",v,(0,r.v_)(_.dream_response),1)):((0,i.uX)(),(0,i.CE)("p",y," Dreaming "))])])])}a(8111),a(1701);var w=a(6288);const b="RfQMNBDXGpjVttL8LW3kpH",k=new w.ij("AIzaSyCZjHuMPr9JPA37ps8Gs1z3xgN9x3LGVB0");var x={name:"App",data(){return{sat_data:null,interval:null,coordinates_sat:"",dream_data:"",location_response:"",dream_response:"",geminiImageUrl:"",prompt:"",dream_prompt:"",lon:"",lat:"",alt:"",sat_name:"",type:""}},mounted(){this.fetch_data(),this.interval=setInterval((()=>{this.coordinates_sat=this.sat_data.features.map((e=>e.geometry.coordinates)),this.dream_data=this.sat_data.features.map((e=>e)),console.log("This is dream data",this.dream_data),this.fetch_data()}),15e3)},watch:{dream_data:{deep:!0,handler(e){if(e[0].geometry.coordinates){console.log("This is Sat Name",e[0].geometry.coordinates[0]);const t=Math.floor(Math.random()*e.length);this.lon=e[t].geometry.coordinates[0],this.lat=e[t].geometry.coordinates[1],this.sat_name=e[t].properties.name,this.type=e[t].properties.modes[0].sensor_type,this.swath=e[t].properties.modes[0].swath,this.prompt=`What is the place located at latitude ${this.lat}, longitude ${this.lon} and swath of ${this.swath}? Provide only the name of the place. Be accurate. If you do not finde a plase return the nearest area to that location and only the location "The nearest location is.."".`,this.dream_prompt=`This satellite ${this.name} is at ${this.lat}, ${this.lon} and have this sensor ${this.type}. Genrate a poem based on what the machine is dreaming about. Max 100 words. Return only the dream text without any extra explination`,this.sendToGemini(),this.generateGeminiImage(this.lat,this.lon,this.swath)}}}},methods:{async fetch_data(){try{const e=await fetch(`https://api.spectator.earth/satellite/?api_key=${b}`,{cache:"no-store"});if(!e.ok)throw new Error(`API Error: ${e.status}`);this.sat_data=await e.json(),console.log(this.sat_data)}catch(e){console.error("Fetch error:",e)}},async sendToGemini(){try{const e=k.getGenerativeModel({model:"gemini-2.0-flash"}),t=await e.generateContent(this.prompt),a=await e.generateContent(this.dream_prompt);this.location_response=t.response.text(),this.dream_response=a.response.text()}catch(e){console.error("Gemini text generation error:",e)}},async generateGeminiImage(e,t,a){const n=`\n        Generate a highly realistic satellite image at a resolution of exactly 1080x1080 pixels, vividly capturing Earth's surface at the precise coordinates of Longitude: ${t}, Latitude: ${e}. The viewpoint should emulate that of a real-time Earth observation satellite orbiting directly overhead, clearly reflecting the satellite's current swath width coverage of approximately ${a} kilometers.\n\n        Ensure the following details:\n        - Accurately depict natural terrain, including geological features, bodies of water, vegetation types, or urban landscapes corresponding precisely to these coordinates.\n        - Maintain logical realism consistent with satellite imagery: realistic atmospheric clarity, accurate color grading (natural colors), and appropriate shadowing based on sunlight direction relevant to the current time at the provided location.\n        - The perspective should be strictly top-down, perpendicular to Earth's surface, avoiding oblique or angled views.\n        - Include realistic cloud coverage only if typical and logical for the region at this moment; avoid exaggerated or unrealistic cloud formations.\n\n        This image must appear precisely representative of live satellite-captured visuals, suitable for real-time monitoring purposes and credible satellite data applications.\n        `,i=k.getGenerativeModel({model:"gemini-2.0-flash-exp-image-generation",generationConfig:{responseModalities:["Text","Image"]}});try{const e=await i.generateContent(n);let t=!1;for(const a of e.response.candidates[0].content.parts)if(a.inlineData){this.geminiImageUrl=`data:image/png;base64,${a.inlineData.data}`,t=!0;break}t||(console.error("Gemini didn't return valid inline image data."),this.geminiImageUrl="")}catch(r){console.error("Gemini image generation error:",r),this.geminiImageUrl=""}}},beforeUnmount(){clearInterval(this.interval)}},L=a(1241);const I=(0,L.A)(x,[["render",_]]);var G=I,$=a(6416);a(4188);(0,n.Ef)(G).use($.A).mount("#app")}},t={};function a(n){var i=t[n];if(void 0!==i)return i.exports;var r=t[n]={exports:{}};return e[n].call(r.exports,r,r.exports,a),r.exports}a.m=e,function(){var e=[];a.O=function(t,n,i,r){if(!n){var o=1/0;for(d=0;d<e.length;d++){n=e[d][0],i=e[d][1],r=e[d][2];for(var s=!0,l=0;l<n.length;l++)(!1&r||o>=r)&&Object.keys(a.O).every((function(e){return a.O[e](n[l])}))?n.splice(l--,1):(s=!1,r<o&&(o=r));if(s){e.splice(d--,1);var c=i();void 0!==c&&(t=c)}}return t}r=r||0;for(var d=e.length;d>0&&e[d-1][2]>r;d--)e[d]=e[d-1];e[d]=[n,i,r]}}(),function(){a.n=function(e){var t=e&&e.__esModule?function(){return e["default"]}:function(){return e};return a.d(t,{a:t}),t}}(),function(){a.d=function(e,t){for(var n in t)a.o(t,n)&&!a.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}}(),function(){a.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}()}(),function(){a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}}(),function(){var e={524:0};a.O.j=function(t){return 0===e[t]};var t=function(t,n){var i,r,o=n[0],s=n[1],l=n[2],c=0;if(o.some((function(t){return 0!==e[t]}))){for(i in s)a.o(s,i)&&(a.m[i]=s[i]);if(l)var d=l(a)}for(t&&t(n);c<o.length;c++)r=o[c],a.o(e,r)&&e[r]&&e[r][0](),e[r]=0;return a.O(d)},n=self["webpackChunksat_app"]=self["webpackChunksat_app"]||[];n.forEach(t.bind(null,0)),n.push=t.bind(null,n.push.bind(n))}();var n=a.O(void 0,[504],(function(){return a(870)}));n=a.O(n)})();
//# sourceMappingURL=app.4ae6eb45.js.map